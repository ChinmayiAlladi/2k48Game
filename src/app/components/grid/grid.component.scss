@import "./../../../variables.scss";

$font-sizes: (
    2: 2rem,
    4: 2rem,
    8: 2rem,
    16: 2rem,
    32: 2rem,
    64: 2rem,
    128: 2rem,
    256: 2rem,
    512: 2rem,
    1024: 1.5rem,
    2048: 1.5rem,
    4096: 1.5rem,
    8192: 1.5rem,
    16384: 1.25rem,
    32768: 1.25rem,
    65536: 1.25rem,
);

:host {
    display: block;
    width: 100%;
    max-width: 1200px;
    margin: 0 auto;
    padding: 1rem;
}

.game-container {
    display: flex;
    flex-direction: column;
    align-items: center;
    width: 100%;
}

/* Header styling - centered at top */
.header {
    text-align: center;
    margin-bottom: 1.5rem;
    width: 100%;
    color: #000000;

    h1 {
        margin-top: 0;
        margin-bottom: 0;
        //font-family: 'Playfair Display', serif;
        font-weight: 700;
        letter-spacing: 1px;
    }
}

.taylors-font {
    font-family: 'taylors-font';
    font-size: 1.5rem;
    color: #000000;
    margin: 0;
    letter-spacing: 1px
}

/* Main area with game grid and controls */
.main-area {
    display: flex;
    width: 100%;
    justify-content: center;
    align-items: flex-start;
    gap: 2rem;
}

/* Game controls on the left */
.game-controls {
    display: flex;
    flex-direction: column;
    gap: 1rem;
    width: 150px;
    
    .button {
        width: 100%;
        padding: 0.75rem;
        font-family: 'Montserrat', sans-serif;
        font-weight: 600;
        text-transform: uppercase;
        letter-spacing: 1px;
        font-size: 0.9rem;
        transition: all 0.3s ease;
        
        &:hover {
            background-color: #b0bec5;
            transform: translateY(-2px);
        }
    }
    
    .score {
        display: flex;
        flex-direction: column;
        gap: 0.5rem;
        font-family: 'Montserrat', sans-serif;
        
        p {
            margin: 0;
            font-weight: 400;
            letter-spacing: 0.5px;
        }
    }
}

/* Game section with grid and arrows */
.game-section {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 1.5rem;
}

.grid-bg {
    padding: $gap;
    background-color: transparent;
    border-radius: $border-radius;
}

.grid-container {
    width: $grid-display-size;
    height: $grid-display-size;
    position: relative;
    display: flex;
    gap: $gap;

    .column {
        display: flex;
        flex-direction: column;
        gap: $gap;
        width: $tile-size;
    }
}

/* Arrow buttons styling */
.grid-buttons {
    width: 100%;
}

.buttons {
    display: flex;
    gap: 1rem;
    align-items: center;
    justify-content: center;
    
    .vertical-buttons {
        gap: 1rem;
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
    }
}

.button {
    border-radius: 99rem;
    background-color: white;
    border: none;
    padding: 0.5rem;
    cursor: pointer;
    box-shadow: 0 2px 4px rgba(0,0,0,0.1);

    &-direction {
        width: 4rem;
        height: 4rem;
        display: flex;
        align-items: center;
        justify-content: center;
        transition: all 0.2s ease;

        &:hover {
            background-color: #b0bec5;
            transform: translateY(-2px);
        }

        .icon {
            width: 2rem;
            height: 2rem;
        }
    }
}

/* Updated footer styles in your SCSS file */
.footer {
    margin-top: 2rem;
    width: 100%;
    
    .footer-container {
        display: flex;
        justify-content: space-between;
        align-items: center;
        width: 100%;
        padding: 0 1rem;
    }
    
    .footer-left {
        text-align: left;
    }
    
    .footer-center {
        text-align: center;
    }
    
    .footer-right {
        text-align: right;
    }
    
    p {
        margin: 0;
        font-family: 'Montserrat', sans-serif;
        font-size: 0.9rem;
        font-weight: 300;
        letter-spacing: 0.5px;
        color: #000000;
    }
    
    .version-switch {
        cursor: pointer;
    }
    .about {
        cursor: pointer;
    }
    
    .version-link {
        color: #0066cc;
        font-weight: 500;
        text-decoration: underline;
        transition: all 0.2s ease;
        
        &:hover {
            color: #004080;
        }
    }
    
    /* Responsive adjustments for small screens */
    @media (max-width: 768px) {
        .footer-container {
            flex-direction: column;
            gap: 0.5rem;
        }
        
        .footer-left, .footer-center, .footer-right {
            text-align: center;
            width: 100%;
        }
    }
}
.game-hint {
    font-style: italic;
    font-size: 0.7rem;
    color: #100e10; /* light purple or any Swift-themed color */
    text-align: center;
    margin-top: 0.5rem;
  }
.tile {
    width: $tile-size;
    height: $tile-size;
    border-radius: $border-radius;
    background-color: transparent;
    border: 1px solid white;
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 2rem;
    transition: transition_standard(all, 250ms);
    color: #0f172a;
    position: absolute;

    &.is-new {
        animation: spawn $transition-duration-entering $deceleration-curve-timing-function;
    }

    @for $x from 0 through $grid-size-index {
        @for $y from 0 through $grid-size-index {
            &.position-#{$x}-#{$y} {
                top: #{($tile-size * $y) + ($gap * $y)};
                left: #{($tile-size * $x) + ($gap * $x)};
            }
        }
    }

    @each $value, $color in $colors {
        &.value-#{$value} {
            background-color: $color;
        }
    }

    @each $value, $size in $font-sizes {
        &.value-#{$value} {
            font-size: $size;
        }
    }
}

.tile img {
    width: 100%;
    height: 100%;
    object-fit: cover;
    border-radius: 2px;
}
  
.mock-tile {
    position: static;
}

.game-over {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.3);
    display: flex;
    align-items: center;
    justify-content: center;
    text-align: center;
    border-radius: $border-radius;
    animation: spawn $transition-duration-entering $deceleration-curve-timing-function;

    .text {
        margin: 0;
        color: white;
        font-size: 3rem;
        text-shadow: 0 0 0.5rem black;
        font-family: 'Playfair Display', serif;
        font-weight: 700;
        letter-spacing: 2px;
    }
}

@keyframes spawn {
    0% {
        opacity: 0.25;
        transform: scale(1, 1);
    }

    25% {
        transform: scale(0.9, 1.1);
    }

    50% {
        opacity: 1;
        transform: scale(1.1, 0.9);
    }

    75% {
        transform: scale(0.95, 1.05);
    }

    100% {
        transform: scale(1, 1);
    }
}

.start-game-overlay {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: transparent;
    display: flex;
    align-items: center;
    justify-content: center;
    border-radius: $border-radius;
    z-index: 5;
}

.start-button {
    width: 70%;
        padding: 0.75rem;
        font-family: 'Montserrat', sans-serif;
        font-weight: 600;
        text-transform: uppercase;
        letter-spacing: 1px;
        font-size: 0.9rem;
    text-transform: uppercase;
    background-color: white;
    border: none;
    border-radius: 79rem;
    cursor: pointer;
    transition: all 0.5s ease;
    box-shadow: 0 4px 8px rgba(0,0,0,0.2);
    
    &:hover {
        background-color: #b0bec5;
        transform: translateY(-3px);
        box-shadow: 0 6px 12px rgba(0,0,0,0.15);
    }
    
    &:active {
        transform: translateY(-1px);
    }
}

/* Fade in animation for tiles when game starts */
@keyframes fadeIn {
    from {
        opacity: 0;
    }
    to {
        opacity: 1;
    }
}

.tile:not(.mock-tile) {
    animation: fadeIn 0.5s ease forwards;
}

/* Add styles for disabled buttons */
.button:disabled {
    opacity: 0.6;
    cursor: not-allowed;
    
    &:hover {
        transform: none;
        background-color: #cbd5e1;
    }
}